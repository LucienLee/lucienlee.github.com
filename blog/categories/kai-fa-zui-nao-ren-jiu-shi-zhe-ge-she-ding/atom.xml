<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: 開發最惱人就是這個設定 | Self Efficacy]]></title>
  <link href="http://selfecy.com/blog/categories/kai-fa-zui-nao-ren-jiu-shi-zhe-ge-she-ding/atom.xml" rel="self"/>
  <link href="http://selfecy.com/"/>
  <updated>2013-08-16T16:20:29+08:00</updated>
  <id>http://selfecy.com/</id>
  <author>
    <name><![CDATA[Lucien Lee]]></name>
    <email><![CDATA[lkiral7903@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[讓Octopress有中文分類及側邊列]]></title>
    <link href="http://selfecy.com/blog/2013/07/13/rang-octopressyou-zhong-wen-fen-lei-ji-ce-bian-lie/"/>
    <updated>2013-07-13T00:18:00+08:00</updated>
    <id>http://selfecy.com/blog/2013/07/13/rang-octopressyou-zhong-wen-fen-lei-ji-ce-bian-lie</id>
    <content type="html"><![CDATA[<h2>前言</h2>

<p>Octopress 雖然號稱他可以讓人<a href="http://blog.xdite.net/posts/2011/10/07/what-is-octopress">輕鬆部屬、愉悅寫作</a>，但實際上原生 Octopress 2.0 對中文的支持很差，對於與 Ruby 不是好朋友的我，沒有能力自己去改寫，只能去找網路上的 Octopress 前輩們的解法參考，然後 Copy and Paste 試試看究竟可不可以解決問題。</p>

<p>首先我遇到了第一個問題是<strong>『如何使用中文分類，以及將分類顯示在側邊列』</strong>。</p>

<p>很不幸地是，似乎蠻多前輩都是使用英文分類，而其他找到的解法雖然可以使用中文分類，但側編列的問題似乎並不適用於 host 在 <strong>github</strong> 的情況，這真是很奇怪的問題，讓我一度萌生把東西改架在 <a href="https://www.heroku.com/%E2%80%8E">Heroku</a> 上。</p>

<p>最後我參考了 <a href="http://khaos.github.io/">khaos</a> 如何去讓 Octopreess 支援中文分類的作法，如法炮製地更改側邊列的 <code>category_sidebar.rb</code> 讓他成功讓我可以在 github 上的 Octopress 使用中文側邊列，有鑑於我沒有在網路上找到我的情況的解法，在此分享給大家。</p>

<!-- more -->


<h2>解決方法</h2>

<p>基本上我是跟隨 <a href="http://khaos.github.io/blog/2012/12/06/using-chinese-category-tags-in-octopress/">Octopress易筋经，中文分类标签</a> 的思考方法。既然中文行不通，那就把中文換成英文拼音，以英文來存取中文檔名。實作上是利用 <a href="https://github.com/rsl/stringex">stringex</a> 的 <code>to_url</code> 函式把中文分類標籤的連結位置與相應的 <code>category_dir</code> 全部換成相應的拼音。實際上當你使用 <code>rake new_[post|page]</code> 指令創建含有中文名的文章時也採用了這樣的技巧，你可以去觀察 Octopress 所建出來的 markdown 檔名，中文標題全部換為拼音顯示。</p>

<h3>實際實現方法</h3>

<h4>1. 修改分類的生成方法</h4>

<p>首先你得先讓修改分類的生成方法，使之可以使用中文。我採用 khaos 的 <a href="http://khaos.github.io/blog/2012/12/06/using-chinese-category-tags-in-octopress/">Octopress易筋经，中文分类标签</a> 這篇文章所提方法，在此轉錄他的作法：</p>

<p>請修改你的 <code>plugins/category_generator.rb</code>，首先在文件頭加上一句：</p>

<pre><code>require "stringex"
</code></pre>

<p>然後找到其中定義 category 目錄的部分，約在 109 行附近：</p>

<pre><code>self.write_category_index(File.join(dir, category.gsub(/_|\P{Word}/, '-').gsub(/-{2,}/, '-').downcase), category)
</code></pre>

<p>將其修改為：</p>

<pre><code>self.write_category_index(File.join(dir, category.gsub(/_|\P{Word}/, '-').gsub(/-{2,}/, '-').to_url.downcase), category)
</code></pre>

<p>再找到定義中文分類網頁標籤的部分，約是 164 行附近：</p>

<pre><code>"&lt;a class='category' href='http://selfecy.com/#{dir}/#{item.gsub(/_|\P{Word}/, '-').gsub(/-{2,}/, '-').downcase}/'&gt;#{category}&lt;/a&gt;"
</code></pre>

<p>將其修改為：</p>

<pre><code>"&lt;a class='category' href='http://selfecy.com/#{dir}/#{category.gsub(/_|\P{Word}/, '-').gsub(/-{2,}/, '-').to_url.downcase}/'&gt;#{category}&lt;/a&gt;"
</code></pre>

<p>這樣你就完成中文分類的修改了。</p>

<h4>2. 加入分類到側邊欄</h4>

<p>在修改側篇欄可以使用中文分類前得先有側邊欄分類，以下參考 <a href="https://github.com/DrayChou/OctopressBlog/blob/master/plugins/category_sidebar.rb">DrayChou的做法</a> ：</p>

<p>首先把以下內容存到 <code>plugins/category_sidebar.rb</code> 。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>category_sidebar.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="k">module</span> <span class="nn">Jekyll</span>
</span><span class='line'>  <span class="k">class</span> <span class="nc">CategoryListTag</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span> <span class="ss">Liquid</span><span class="p">:</span><span class="ss">:Tag</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;pre&gt;&lt;code&gt;def render(context)</span>
</span><span class='line'><span class="sr">  html = &quot;&quot;</span>
</span><span class='line'><span class="sr">  categories = context.registers[:site].categories.keys</span>
</span><span class='line'><span class="sr">  categories.sort.each do |category|</span>
</span><span class='line'><span class="sr">    posts_in_category = context.registers[:site].categories[category].size</span>
</span><span class='line'><span class="sr">    html &amp;lt;&amp;lt; &quot;&amp;lt;li class=&#39;category&#39;&amp;gt;&amp;lt;a href=&#39;http:/</span><span class="o">/</span><span class="n">selfecy</span><span class="o">.</span><span class="n">com</span><span class="o">/</span><span class="n">blog</span><span class="o">/</span><span class="n">categories</span><span class="o">/</span><span class="c1">#{category.downcase}/&#39;&amp;gt;#{category} (#{posts_in_category})&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;\n&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="n">html</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;Liquid::Template.register_tag(&amp;lsquo;category_sidebar&amp;rsquo;, Jekyll::CategoryListTag)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>接下來把以下內容存到 <code>source/_includes/asides/category_sidebar.html</code> 。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>category_sidebar.html </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;section&gt;</span>
</span><span class='line'>  <span class="nt">&lt;h1&gt;</span>Categories<span class="nt">&lt;/h1&gt;</span>
</span><span class='line'>  <span class="nt">&lt;ul</span> <span class="na">id=</span><span class="s">&quot;categories&quot;</span><span class="nt">&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;pre&gt;&lt;code&gt;</span>{% category_sidebar %}
</span><span class='line'><span class="nt">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span>  <span class="nt">&lt;/ul&gt;</span>
</span><span class='line'><span class="nt">&lt;/section&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>最後修改 <code>_config.yml</code> ，增加分類內容 <code>asides/category_sidebar.html</code> 到 <code>default_asides</code>。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>_config.yml </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="l-Scalar-Plain">&lt;pre&gt;&lt;code&gt;default_asides</span><span class="p-Indicator">:</span> <span class="p-Indicator">[</span><span class="nv">asides/category_sidebar.html</span><span class="p-Indicator">,</span> <span class="nv">asides/recent_posts.html</span><span class="p-Indicator">]</span>
</span><span class='line'><span class="l-Scalar-Plain">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="l-Scalar-Plain">&lt;p&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>這樣就完成加入側邊欄的分類列表了。</p>

<h4>3. 修改側邊欄支援中文分類</h4>

<p>最後你可以藉由修改 <code>plugins/category_list_tag.rb</code> 來讓他支援中文分類。作法如下：
首先在文件頭加入：</p>

<pre><code>require "stringex"
</code></pre>

<p>再來找到 <code>category_list_tag.rb</code> 檔案裡的：</p>

<pre><code>html &lt;&lt; "&lt;li class='category'&gt;&lt;a href='http://selfecy.com/blog/categories/#{category.downcase}/'&gt;#{category} (#{posts_in_category})&lt;/a&gt;&lt;/li&gt;\n"
</code></pre>

<p>將之換成底下這句：</p>

<pre><code>html &lt;&lt; "&lt;li class='category'&gt;&lt;a href='http://selfecy.com/blog/categories/#{category.to_url.downcase}/'&gt;#{category} (#{posts_in_category})&lt;/a&gt;&lt;/li&gt;\n"
</code></pre>

<p>這樣便大功告成，打完收工。</p>

<h2>參考資料</h2>

<p><a href="http://blog.sprabbit.com/blog/2012/03/23/octopress/">关于在64位 Windows 7 中部署中文化的Octopress</a> <br/>
<a href="http://geron.heroku.com/blog/2012/03/octo-cate-cn-spo/">Octopress博客分类添加中文支持</a> <br/>
<a href="http://khaos.github.io/blog/2012/12/06/using-chinese-category-tags-in-octopress/">Octopress易筋经，中文分类标签</a><br/>
<a href="https://github.com/DrayChou/OctopressBlog/">DrayChou 的 Octopress 框架</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AWS EC2 快速連線方法]]></title>
    <link href="http://selfecy.com/blog/2013/07/10/aws-ec2-kuai-su-lian-xian-fang-fa/"/>
    <updated>2013-07-10T15:57:00+08:00</updated>
    <id>http://selfecy.com/blog/2013/07/10/aws-ec2-kuai-su-lian-xian-fang-fa</id>
    <content type="html"><![CDATA[<h2>前言</h2>

<p>最近跟著 <a href="https://www.coursera.org/">Coursera</a> 的 <a href="https://class.coursera.org/startup-001">Startup Engineering</a> 開始學習我較不熟悉的 Linus 環境底下開發與 Deployment ，順手把註冊半年以久的 AWS 帳號進行信用卡認證，正式開通使用。</p>

<p>不清楚 Coursera 的朋友們可以上 <a href="http://zh.wikipedia.org/wiki/Coursera">Wikipedia</a>了解詳情。簡單的說，他是由 Stanford 大學教授 Andrew Ng 和 Daphne Koller 發起的大學線上課程，上面有許多一流大學所開設的<strong>免費</strong>課程，可以讓大眾自由學習。</p>

<p>這篇文章的重點是如何快速連線 AWS EC2，雖然在 Startup Engineering 課程中有介紹如何達成，但<a href="http://blog.dm4.tw/">dm4</a>大大分享給我更多一點的技巧，在此分享給大家。</p>

<!-- more -->


<h2>原本的情況</h2>

<p>遠端連線 EC2 的方法是藉由 <code>ssh</code> 指令進行加密連線，在 AWS 建立新的 instance 的時候，我們會得到一個 <code>.pem</code> 檔案作為連線認證使用。這時候 AWS 給我們的連線範例是：</p>

<pre><code># @local machine

$ cd downloads  #移動到你的 .pem 檔所在地方
$ ssh -i yourkey.pem ubuntu@ec2-54-218-73-84.us-west-2.compute.amazonaws.com 
</code></pre>

<p>這串指令實在很麻煩，身為一個記憶力正常的凡人，看到這段指令絕對是掩面而泣。</p>

<p><img src="https://lh3.googleusercontent.com/-tNSs9v6H-60/Ud0wLtSi-TI/AAAAAAAAAY0/6kEC7ufAQFs/w800-h549-no-Ut/www.hdwaller.com+Grumpy-Cat-Full-HD-Wallpaper.jpg" width="50%"></p>

<p>所幸課程馬上就傳授如何縮短指令的方法。</p>

<h2>課程的版本</h2>

<p>簡單來說，我們可以藉由 <code>.ssh/config</code> 檔案預先存好登入所要的資訊並給予別名，之後就可以直接打別名進行連線，系統會直接抓取 config 的資料，就不需要一再輸入。那 <code>.ssh/config</code> 要怎麼寫呢？其實他的基本格式很簡單，就像下面這般：</p>

<pre><code>Host 名稱(就是用來好記的別名)
    HostName 主機名字
    User 登入用戶名
    IdentityFile 驗證文件的路徑
</code></pre>

<p>實際上操作的話，以下提供課程所使用的例子：</p>

<pre><code># @local machine
# 首先先複製 key.pem 到 ~/.ssh 底下，並改好檔案權限
$ mkdir -p ~/.ssh
$ cp ~/downloads/skey.pem ~/.ssh/
$ chmod 400 ~/.ssh/skey.pem
$ chmod 700 ~/.ssh
$ vim ~/.ssh/config
# 在 config 編輯內容如下
Host awshost1
    HostName ec2-54-218-35-71.us-west-2.compute.amazonaws.com #@後面那段
    User ubuntu #@前面那段
    IdentityFile "~/.ssh/skey.pem"
</code></pre>

<p>設置好之後就可以以<code>ssh 別名</code>來連線了，比如說以上的例子就是輸入<code>ssh awshost1</code>來連線。</p>

<h2>再也不用 .pem 了</h2>

<p>雖然上面已經可以十分方便了，但是我們還可以再做更多一點。
上面的方法我們還是需要保留 <code>.pem</code> 檔案，事實上我們可以連本地端的 <code>.pem</code> 檔都不用就可以連線，以下就是要介紹如何跟你的 <code>.pem</code> 說拜拜。</p>

<pre><code># @local machine 
# 首先移動到你的 .pem 所在的地方，印出 .pem 檔的內容。記得要用你自己的檔名換掉yourkeyname
$ cat yourkeyname.pem  
# 印出來的內容複製起來，他會長的像是：
$ ssh-rsa AAAAB3NzaC1yc2EAA……
</code></pre>

<p>再來連線到你 EC2 的遠端機器，把複製到的東西寫到 <code>~/.ssh/authorized_keys</code> 裡面。</p>

<pre><code># @remote machine
$ vim .ssh/authorized_keys
# 貼上你剛剛從自己電腦複製出來的那段東西，存檔。
</code></pre>

<p>之後你就可以把你的 <code>.pem</code> 檔給刪掉啦！然後記得把你 <code>.ssh/config</code> 底下的 <code>IdentityFile "~/.ssh/skey.pem"</code> 這一行刪掉。
你最後的 <code>config</code> 應該是長這樣子的：</p>

<pre><code>Host awshost1
    HostName ec2-54-218-35-71.us-west-2.compute.amazonaws.com
    User ubuntu
</code></pre>

<p>很簡單吧！五分鐘不到的設定可以節省我們以後更多開發時間呢！</p>

<h2>參考資料</h2>

<p><a href="https://d396qusza40orc.cloudfront.net/startup/lecture_slides%2Flecture3-linux-ssjs-v2.pdf">Startup Engineering: Lecture 3: Linux and Server-Side Javascript</a></p>

<p>感謝<a href="http://blog.dm4.tw/">dm4</a>大大的教學。</p>

<p>貓咪圖片 from <a href="http://www.hdwaller.com/new-grumpy-cat-full-hd-wallpaper-4376-just-another-high-quality-hq.html">HDWaller</a></p>

<h3>附註</h3>

<p><code>.pem</code> 全名為 Privacy Enhanced Mail，想了解更多的話可以讀 <a href="http://en.wikipedia.org/wiki/X.509">X.509</a> 在 Wiki 的資料或是 <a href="http://serverfault.com/questions/9708/what-is-a-pem-file-and-how-does-it-differ-from-other-openssl-generated-key-file">server fault 上面的討論</a> 。</p>
]]></content>
  </entry>
  
</feed>
